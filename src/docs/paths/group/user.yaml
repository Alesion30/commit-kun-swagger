get:
  # security:
  #   - Bearer: []
  tags:
    - group
  summary: "グループのユーザ一覧取得"
  description: "ユーザーの所属するグループのユーザ一覧を取得"
  parameters:
    - name: "groupId"
      in: query
      description: "グループID"
      required: true
      type: number
      example: 1
  responses:
    200:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Group"
    400:
      $ref: "#/components/responses/400"
    401:
      $ref: "#/components/responses/401"
    500:
      $ref: "#/components/responses/500"

post:
  # security:
  #   - Bearer: []
  tags:
    - group
  summary: "新規グループ作成"
  description: "ユーザーがオーナーの新規ルーム作成"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userUid:
              description: ユーザーID
              type: string
              example: "xWDG67WKXjROfE22eMEOd7rvYU12"
            groupName:
              description: グループ名
              type: string
              example: "プログラミング同好会"
            members:
              description: グループ招待ユーザ
              type: array
              items:
                type: object
                properties:
                  userUid:
                    description: ユーザーID
                    type: string
                    example: "aaa111"

  responses:
    200:
      $ref: "#/components/responses/200"
    400:
      $ref: "#/components/responses/400"
    401:
      $ref: "#/components/responses/401"
    500:
      $ref: "#/components/responses/500"