openapi: 3.0.0
info:
  description: hackU vscode拡張機能 バックエンドAPI仕様書
  version: 1.0.0
  title: working record API
servers:
  - url: 'http://localhost:8880'
    description: Development Server
tags:
  - name: user
    description: Operations about user
paths:
  /user:
    get:
      tags:
        - user
      summary: ユーザー情報取得
      description: ログインユーザーの情報を取得
      parameters:
        - name: userUid
          in: query
          description: ユーザーID
          required: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - user
      summary: ユーザー情報取得
      description: ログインユーザーの情報を取得
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userUid:
                  description: ユーザーID
                  type: string
                  example: xWDG67WKXjROfE22eMEOd7rvYU12
                userName:
                  description: ユーザー名
                  type: string
                  example: テストユーザー
                email:
                  description: メールアドレス
                  type: string
                  example: testuser@sample.com
                imageUrl:
                  description: 画像URL
                  type: string
                  example: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  schemas:
    User:
      description: ユーザー
      type: object
      properties:
        userUid:
          description: ユーザーID
          type: string
          example: xWDG67WKXjROfE22eMEOd7rvYU12
        userName:
          description: ユーザー名
          type: string
          example: パンダ
        email:
          description: メールアドレス
          type: string
          example: fff@fff.com
        imageUrl:
          description: 画像URL
          type: string
          example: ''
        isActive:
          description: アクティブかどうか
          type: boolean
          example: false
        createdAt:
          description: 作成日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
        updatedAt:
          description: 更新日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
        deletedAt:
          description: 削除日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
    Error:
      description: エラー
      type: object
      properties:
        status:
          description: エラーコード
          type: number
          example: 401
        message:
          description: エラーメッセージ
          type: string
          example: Unauthorized
  responses:
    '200':
      description: 成功
      content:
        application/json:
          example:
            status: 200
            message: success
    '400':
      description: パラメータが不正
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 400
            message: Bad Request
    '401':
      description: 認証失敗
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 401
            message: Unauthorized token
    '404':
      description: データなし
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 404
            message: Data is not found
    '500':
      description: サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 500
            message: Server Error
