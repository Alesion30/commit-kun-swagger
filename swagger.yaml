openapi: 3.0.0
info:
  description: hackU vscode拡張機能 バックエンドAPI仕様書
  version: 1.0.0
  title: working record API
servers:
  - url: 'http://localhost:8880'
    description: Development Server
  - url: 'https://commit-kun.herokuapp.com'
    description: Production Server
tags:
  - name: user
    description: Operations about user
paths:
  /user:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: ユーザー情報取得
      description: ユーザーの情報を取得
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - Bearer: []
      tags:
        - user
      summary: ユーザー情報登録
      description: ユーザーの情報を登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  description: ユーザー名
                  type: string
                  example: テストユーザー
                email:
                  description: メールアドレス
                  type: string
                  example: testuser@sample.com
                imageUrl:
                  description: 画像URL
                  type: string
                  example: ''
                accessToken:
                  description: アクセスToken
                  type: string
                  example: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - Bearer: []
      tags:
        - user
      summary: ユーザー情報を更新
      description: ユーザーの情報を更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  description: ユーザー名
                  type: string
                  example: テストユーザー
                email:
                  description: メールアドレス
                  type: string
                  example: testuser@creamy.com
                imageUrl:
                  description: 画像URL
                  type: string
                  example: ''
                accessToken:
                  description: アクセスToken
                  type: string
                  example: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/friend:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: フレンド一覧を取得
      description: ログインユーザーのフレンド一覧を取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - Bearer: []
      tags:
        - user
      summary: フレンド申請・承認
      description: ログインユーザからフレンド申請・承認を行う
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendUid:
                  description: フレンドユーザーID
                  type: string
                  example: xWDG67WKXjROfE22eMEOd7rvYU12
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          description: すでにフレンドである
          content:
            application/json:
              example:
                status: 422
                message: already friend
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - Bearer: []
      tags:
        - user
      summary: フレンド解除
      description: ログインユーザからフレンド解除を行う
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                properties: null
                friendUid:
                  description: フレンドユーザーID
                  type: string
                  example: xWDG67WKXjROfE22eMEOd7rvYU12
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/friend/rank:
    get:
      tags:
        - user
      summary: フレンド間でのレベルランキング取得
      description: ユーザのフレンド間でのレベルランキングを取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLevel'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/lang:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 言語ごとの作業時間取得
      description: ユーザーの言語ごとの作業時間取得
      parameters:
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LangWork'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/level:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 前日と現在のレベル取得
      description: ユーザーの前日と現在のレベル取得
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompareLevel'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/mission/daily:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: デイリーミッションを取得
      description: ユーザーのデイリーミッションを取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyMission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/mission/noraml:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 通常ミッションを取得
      description: ユーザーの通常ミッションを取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NormalMission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/hours/work:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 1時間ごとの作業時間を取得
      description: ユーザーの期間内の1時間ごとの作業時間を取得
      parameters:
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkHours'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/hours/type:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 1時間ごとのタイプ数を取得
      description: ユーザーの期間内の1時間ごとのタイプ数を取得
      parameters:
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeHours'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/hours/commit:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 1時間ごとのコミット数を取得
      description: ユーザーの期間内の1時間ごとのコミット数を取得
      parameters:
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitHours'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/hours/pr:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 1時間ごとのPRレビューコメント数を取得
      description: ユーザーの期間内の1時間ごとのPRレビューコメント数を取得
      parameters:
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PRCommentHours'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/active-log:
    get:
      tags:
        - user
      summary: 作業ログ取得
      description: ユーザーの前日と今日の作業記録を取得
      parameters:
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveLog'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/git:
    get:
      tags:
        - user
      summary: 'コミット数,PRレビューコメント数をDBに反映'
      description: 'GitHubからユーザのコミット数,PRレビューコメント数を取得し，DBに反映させる'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /user/exp/days:
    get:
      security:
        - Bearer: []
      tags:
        - user
      summary: 日毎の経験値を取得
      description: ユーザーの期間内の日毎の取得経験値を取得
      parameters:
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DaysExp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /group:
    get:
      security:
        - Bearer: []
      tags:
        - group
      summary: グループ一覧取得
      description: ユーザーの所属するグループ一覧を取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - group
      summary: 新規グループ作成
      description: ユーザーがオーナーの新規ルーム作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userUid:
                  description: ユーザーID
                  type: string
                  example: xWDG67WKXjROfE22eMEOd7rvYU12
                groupName:
                  description: グループ名
                  type: string
                  example: プログラミング同好会
                members:
                  description: グループ招待ユーザ
                  type: array
                  items:
                    type: object
                    properties:
                      userUid:
                        description: ユーザーID
                        type: string
                        example: aaa111
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /group/user:
    get:
      security:
        - Bearer: []
      tags:
        - group
      summary: グループのユーザ一覧取得
      description: ユーザーの所属するグループのユーザ一覧を取得
      parameters:
        - name: groupId
          in: query
          description: グループID
          required: true
          type: number
          example: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - Bearer: []
      tags:
        - group
      summary: 新規グループ作成
      description: ユーザーがオーナーの新規ルーム作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupName:
                  description: グループ名
                  type: string
                  example: プログラミング同好会
                members:
                  description: グループ招待ユーザ
                  type: array
                  items:
                    type: object
                    properties:
                      userUid:
                        description: ユーザーID
                        type: string
                        example: aaa111
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /group/rank/work:
    get:
      security:
        - Bearer: []
      tags:
        - group
      summary: 作業時間ランキング取得
      description: グループの作業時間ランキングを取得
      parameters:
        - name: groupId
          in: query
          description: グループID
          required: true
          type: number
          example: 1
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkRank'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /group/rank/type:
    get:
      security:
        - Bearer: []
      tags:
        - group
      summary: タイプ数ランキング取得
      description: グループのタイプ数ランキングを取得
      parameters:
        - name: groupId
          in: query
          description: グループID
          required: true
          type: number
          example: 1
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeRank'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /group/rank/speed:
    get:
      security:
        - Bearer: []
      tags:
        - group
      summary: タイプスピードランキング取得
      description: グループのタイプスピードランキングを取得
      parameters:
        - name: groupId
          in: query
          description: グループID
          required: true
          type: number
          example: 1
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeedRank'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /project:
    get:
      security:
        - Bearer: []
      tags:
        - project
      summary: プロジェクト取得
      description: ユーザーのプロジェクト一覧を取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      security:
        - Bearer: []
      tags:
        - project
      summary: プロジェクト登録
      description: ユーザーのプロジェクトを登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  description: プロジェクト名
                  required: true
                  type: string
                  example: test_project
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - Bearer: []
      tags:
        - project
      summary: プロジェクト名変更
      description: ユーザーのプロジェクト名を変更
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  description: 変更前のプロジェクト名
                  required: true
                  type: string
                  example: test_project
                changeProjectName:
                  description: 変更後のプロジェクト名
                  required: true
                  type: string
                  example: testProject
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /project/work:
    get:
      security:
        - Bearer: []
      tags:
        - project
      summary: プロジェクト内の作業時間を取得
      description: ユーザーのプロジェクトのフォルダ・ファイルごとの作業時間一覧を取得
      parameters:
        - name: projectName
          in: query
          description: プロジェクト名
          required: true
          type: string
          example: test_project
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectWork'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /folder:
    post:
      security:
        - Bearer: []
      tags:
        - folder
      summary: フォルダ登録
      description: ユーザのプロジェクトにpathのフォルダを登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: パス
                  type: string
                  example: /test_project/test_folder/
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - Bearer: []
      tags:
        - folder
      summary: フォルダ名変更
      description: ユーザーのpathのフォルダ名を変更
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: 変更前のフォルダへのパス
                  required: true
                  type: string
                  example: /test_project/test_folder/
                changeFolderName:
                  description: 変更後のフォルダ名
                  required: true
                  type: string
                  example: testFolder
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /folder/work:
    get:
      security:
        - Bearer: []
      tags:
        - folder
      summary: フォルダ内の作業時間を取得
      description: ユーザーのフォルダ内のファイルごとの作業時間一覧を取得
      parameters:
        - name: path
          in: query
          description: フォルダパス
          required: true
          type: string
          example: /test_project/test_folder/
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /file:
    post:
      security:
        - Bearer: []
      tags:
        - file
      summary: ファイル登録
      description: ユーザのプロジェクトにpathのファイルを登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: パス
                  type: string
                  example: /test_project/test_folder/test.go
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - Bearer: []
      tags:
        - file
      summary: ファイル名変更
      description: ユーザーのpathのファイル名を変更
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: 変更前のフォルダへのパス
                  required: true
                  type: string
                  example: /test_project/test_folder/test.go
                changeFileName:
                  description: 変更後のファイル名
                  required: true
                  type: string
                  example: main.go
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /file/work:
    get:
      security:
        - Bearer: []
      tags:
        - file
      summary: ファイルの作業時間を取得
      description: ユーザーのファイルの作業ごとの作業時間一覧を取得
      parameters:
        - name: path
          in: query
          description: フォルダパス
          required: true
          type: string
          example: /test_project/main.go
        - name: start
          in: query
          description: 検索範囲下限時刻
          required: true
          type: string
          example: '2006-01-02T15:04:05.000'
        - name: end
          in: query
          description: 検索範囲上限時刻
          required: true
          type: string
          example: '2006-01-03T15:04:05.000'
        - name: timeDifference
          in: query
          description: 時差
          required: true
          type: number
          example: 9
      responses:
        '200':
          content:
            application/json:
              schema: null
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /work/start:
    post:
      tags:
        - work
      summary: 作業開始
      description: ユーザのファイルの作業開始時刻を登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: パス
                  required: true
                  type: string
                  example: /test_project/main.go
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /work/end:
    post:
      tags:
        - work
      summary: 作業終了
      description: ユーザのファイルの作業終了時刻を登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  description: パス
                  required: true
                  type: string
                  example: /test_project/main.go
                typeNum:
                  description: タイプ数
                  required: true
                  type: number
                  example: 1000
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /rank:
    get:
      security:
        - Bearer: []
      tags:
        - rank
      summary: レベルランキング取得
      description: レベルTop100を取得
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLevel'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  schemas:
    UserInfo:
      description: ユーザー情報
      type: object
      properties:
        userUid:
          description: ユーザーID
          type: string
          example: xWDG67WKXjROfE22eMEOd7rvYU12
        userName:
          description: ユーザー名
          type: string
          example: パンダ
        email:
          description: メールアドレス
          type: string
          example: fff@fff.com
        imageUrl:
          description: 画像URL
          type: string
          example: ''
        accessToken:
          description: アクセストークン
          type: string
          example: ''
        createdAt:
          description: 作成日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
        updatedAt:
          description: 更新日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
        deletedAt:
          description: 削除日
          type: string
          example: '2021-08-22T19:42:16.058+09:00'
    User:
      description: ユーザ
      type: object
      properties:
        userUid:
          description: ユーザーID
          type: string
          example: xWDG67WKXjROfE22eMEOd7rvYU12
        userName:
          description: ユーザー名
          type: string
          example: パンダ
        email:
          description: メールアドレス
          type: string
          example: fff@fff.com
        imageUrl:
          description: 画像URL
          type: string
          example: ''
    Error:
      description: エラー
      type: object
      properties:
        status:
          description: エラーコード
          type: number
          example: 401
        message:
          description: エラーメッセージ
          type: string
          example: Unauthorized
    Project:
      description: プロジェクト
      type: object
      properties:
        projectId:
          description: プロジェクトID
          type: number
          example: 1
        projectName:
          description: プロジェクト名
          type: string
          example: test_project
        workTime:
          description: 作業時間(h)
          type: number
          example: 3.5
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.079
    FolderWork:
      description: フォルダ
      type: object
      properties:
        folderId:
          description: フォルダID
          type: number
          example: 1
        folderName:
          description: フォルダ名
          type: string
          example: test_folder
        folderPath:
          description: フォルダパス
          type: string
          example: /test_folder/
        workTime:
          description: 作業時間(h)
          type: number
          example: 2
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.1389
        files:
          description: ファイル一覧
          type: array
          items:
            $ref: '#components/schemas/FileWork'
        folders:
          description: フォルダ一覧
          type: array
          items:
            $ref: '#components/schemas/FolderWork'
    ProjectWork:
      description: プロジェクト内の作業時間
      type: object
      properties:
        projectId:
          description: プロジェクトID
          type: number
          example: 1
        projectName:
          description: プロジェクト名
          type: string
          example: test_project
        workTime:
          description: 作業時間(h)
          type: number
          example: 3.5
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.079
        folders:
          description: フォルダ一覧
          type: array
          items:
            $ref: '#components/schemas/FolderWork'
    FileWork:
      description: ファイルの作業時間
      type: object
      properties:
        fileId:
          description: ファイルID
          type: number
          example: 1
        fileName:
          description: ファイル名
          type: string
          example: test_file
        workTime:
          description: 作業時間
          type: number
          example: 1.2
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.23
    WorkDetail:
      description: 作業詳細情報
      type: object
      properties:
        workId:
          description: ワークID
          type: number
          example: 1
        startedAt:
          description: 作業開始時刻
          type: string
          example: '2021-08-26T18:52:45.952+09:00'
        finishedAt:
          description: 作業終了時刻
          type: string
          example: '2021-08-26T20:52:45.952+09:00'
        workTime:
          description: 作業時間
          type: number
          example: 2
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.1389
    Work:
      description: ファイル作業情報
      type: object
      properties:
        fileId:
          description: ファイルID
          type: number
          example: 1
        fileName:
          description: ファイル名
          type: string
          example: main.go
        workTime:
          description: 作業時間
          type: number
          example: 3
        typeNum:
          description: タイプ数
          type: number
          example: 1000
        typeSpeed:
          description: タイプスピード(タイプ数/s)
          type: number
          example: 0.093
        works:
          description: 作業詳細一覧
          type: array
          items:
            $ref: '#components/schemas/WorkDetail'
    WorkRank:
      description: 作業時間ランキング
      type: object
      properties:
        groupId:
          description: グループID
          type: number
          example: 1
        groupName:
          description: グループ名
          type: string
          example: testGroup
        workRank:
          description: 作業ランキング
          type: array
          items:
            type: object
            properties:
              workTime:
                description: 作業時間
                type: number
                example: 2
              user:
                $ref: '#components/schemas/User'
    TypeRank:
      description: タイプ数ランキング
      type: object
      properties:
        groupId:
          description: グループID
          type: number
          example: 1
        groupName:
          description: グループ名
          type: string
          example: testGroup
        typeRank:
          description: タイプ数ランキング
          type: array
          items:
            type: object
            properties:
              typeNum:
                description: タイプ数
                type: number
                example: 1000
              user:
                $ref: '#components/schemas/User'
    SpeedRank:
      description: タイプスピードランキング
      type: object
      properties:
        groupId:
          description: グループID
          type: number
          example: 1
        groupName:
          description: グループ名
          type: string
          example: testGroup
        speedRank:
          description: タイプスピードランキング
          type: array
          items:
            type: object
            properties:
              typeSpeed:
                description: タイプスピード
                type: number
                example: 0.5
              user:
                $ref: '#components/schemas/User'
    Group:
      description: グループ情報
      type: object
      properties:
        groupId:
          description: グループID
          type: number
          example: 1
        groupName:
          description: グループ名
          type: string
          example: プログラミング同好会
    LangWork:
      description: 言語ごとの作業時間
      type: object
      properties:
        workTime:
          description: 合計作業時間
          type: number
          example: 3.5
        languages:
          description: 言語ごとの作業時間
          type: array
          items:
            type: object
            properties:
              languageId:
                description: 言語ID
                type: number
                example: 33
              language:
                description: 言語
                type: string
                example: python
              workTime:
                description: 作業時間(h)
                type: number
                example: 1
              percentage:
                description: 作業合計に占める割合
                type: number
                example: 28.6
    Level:
      description: レベルと経験値
      type: object
      properties:
        level:
          description: レベル
          type: number
          example: 1
        experiencePoint:
          description: 経験値
          type: number
          example: 250
    CompareLevel:
      description: 前日と現在のレベルと経験値
      $ref: ./comparelevel.yaml
    DailyMission:
      description: デイリーミッション
      type: object
      properties:
        mission:
          description: ミッション
          type: string
          example: Rustを100word以上書く
        missionType:
          description: ミッションタイプ
          type: string
          example: DailyMission
        clearRate:
          description: クリア率
          type: number
          example: 100
        experiencePoint:
          description: 経験値
          type: number
          example: 50
    NormalMission:
      description: 通常ミッション
      type: object
      properties:
        mission:
          description: ミッション
          type: string
          example: Rustを100word以上書く
        missionType:
          description: ミッションタイプ
          type: string
          example: NormalMission
        clearRate:
          description: クリア率
          type: number
          example: 100
        experiencePoint:
          description: 経験値
          type: number
          example: 500
    IntLog:
      description: int型のアクティブログ
      type: object
      properties:
        yesterdayData:
          description: 前日のデータ
          type: number
          example: 10
        todayData:
          description: 現在のデータ
          type: number
          example: 20
    FloatLog:
      description: float型のアクティブログ
      type: object
      properties:
        yesterdayData:
          description: 前日のデータ
          type: number
          example: 2.5
        todayData:
          description: 現在のデータ
          type: number
          example: 4.5
    ActiveLog:
      description: ユーザの今日と前日の作業ログ
      type: object
      properties:
        level:
          description: レベル
          $ref: '#components/schemas/IntLog'
        experiencePoint:
          description: 経験値
          $ref: '#components/schemas/IntLog'
        workTime:
          description: 作業時間
          $ref: '#components/schemas/FloatLog'
        typeNum:
          description: タイプ数
          $ref: '#components/schemas/IntLog'
        commit:
          description: コミット数
          $ref: '#components/schemas/IntLog'
        prComment:
          description: PRコメント数
          $ref: '#components/schemas/IntLog'
    DaysExp:
      description: 一日の取得経験値
      type: object
      properties:
        date:
          description: 日付
          type: time
          example: '2021-09-01T00:00:00+09:00'
        experiencePoint:
          description: 経験値
          type: number
          example: 100
    UserLevel:
      description: ユーザとレベル，経験値情報
      type: object
      properties:
        level:
          description: レベル
          type: number
          example: 1
        experiencePoint:
          description: 経験値
          type: number
          example: 250
        user:
          type: object
          properties:
            userUid:
              description: ユーザーID
              type: string
              example: xWDG67WKXjROfE22eMEOd7rvYU12
            userName:
              description: ユーザー名
              type: string
              example: パンダ
            email:
              description: メールアドレス
              type: string
              example: fff@fff.com
            imageUrl:
              description: 画像URL
              type: string
              example: ''
    WorkHours:
      description: 時間ごとの作業時間
      type: object
      properties:
        start:
          description: 開始時刻
          type: string
          example: '2021-09-01T00:00:00+09:00'
        end:
          description: 終了時刻
          type: string
          example: '2021-09-02T00:00:00+09:00'
        workTime:
          description: 合計作業時間
          type: number
          example: 300
        hours:
          description: 時間ごとの作業時間
          type: array
          items:
            type: object
            properties:
              hour:
                description: 時間
                type: number
                example: 0
              workTime:
                description: 作業時間
                type: number
                example: 30
    TypeHours:
      description: 時間ごとのタイプ数
      type: object
      properties:
        start:
          description: 開始時刻
          type: string
          example: '2021-09-01T00:00:00+09:00'
        end:
          description: 終了時刻
          type: string
          example: '2021-09-02T00:00:00+09:00'
        typeNum:
          description: 合計タイプ数
          type: number
          example: 3000
        hours:
          description: 時間ごとのタイプ数
          type: array
          items:
            type: object
            properties:
              hour:
                description: 時間
                type: number
                example: 0
              typeNum:
                description: タイプ数
                type: number
                example: 200
    CommitHours:
      description: 時間ごとのコミット数
      type: object
      properties:
        start:
          description: 開始時刻
          type: string
          example: '2021-09-01T00:00:00+09:00'
        end:
          description: 終了時刻
          type: string
          example: '2021-09-02T00:00:00+09:00'
        commitNum:
          description: 合計コミット数
          type: number
          example: 10
        hours:
          description: 時間ごとのコミット数
          type: array
          items:
            type: object
            properties:
              hour:
                description: 時間
                type: number
                example: 0
              commit:
                description: コミット数
                type: number
                example: 2
    PRCommentHours:
      description: 時間ごとのPRレビューコメント数
      type: object
      properties:
        start:
          description: 開始時刻
          type: string
          example: '2021-09-01T00:00:00+09:00'
        end:
          description: 終了時刻
          type: string
          example: '2021-09-02T00:00:00+09:00'
        prCommentNum:
          description: 合計PRレビューコメント数
          type: number
          example: 10
        hours:
          description: 時間ごとのPRレビューコメント数
          type: array
          items:
            type: object
            properties:
              hour:
                description: 時間
                type: number
                example: 0
              commit:
                description: PRレビューコメント数
                type: number
                example: 2
  responses:
    '200':
      description: 成功
      content:
        application/json:
          example:
            status: 200
            message: success
    '400':
      description: パラメータが不正
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 400
            message: Bad Request
    '401':
      description: 認証失敗
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 401
            message: Unauthorized token
    '404':
      description: データなし
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 404
            message: Data is not found
    '500':
      description: サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 500
            message: Server Error
